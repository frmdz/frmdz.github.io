const canvas = document.getElementById("canvas");
const context = canvas.getContext("2d");

export let n_rows, blocks, level_sum;

export function set_level(level_number) {
  switch(level_number) {
    case 1:
      blocks = [[2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1]];
      n_rows = blocks.length;
      break;
    
    case 2:
      blocks = [[2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1]];

      n_rows = blocks.length;
      break;

    case 3:
      blocks = [[2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 0, 0, 1, 0, 0, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 0, 0, 1, 0, 0, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 0, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 0, 1, 1, 1, 0, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 0, 0, 0, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1],
              [2, 2, 2 ,2 ,2 ,2 ,2 ,2 ,2, 2 ,2 ,2 ,2],
              [1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ,1 ,1 ,1]];

      n_rows = blocks.length;
      break;
  }

  level_sum = 0
  for (let i=0; i<blocks.length; i++) {
    for (let j=0; j<blocks[0].length; j++) {
      level_sum += blocks[i][j];
      //magic numbers go brrrrr!
      blocks[i][j] = {state:blocks[i][j], x: 1 + (46*j), y:50+(20*i), width:46, height:20}; //magic numbers go brrrrr!
    }
  }
}

export
function draw_blocks() {
  blocks.forEach(row => {
    row.forEach(element => {
      if(element.state){
        context.fillStyle = (element.state == 2) ? "#bdbdbd" : "white";
        context.fillRect(element.x, element.y, element.width-2, element.height-2);
      }
    });
  });
}